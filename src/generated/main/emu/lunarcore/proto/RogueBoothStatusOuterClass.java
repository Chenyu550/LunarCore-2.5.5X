// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import us.hebi.quickbuf.ProtoEnum;
import us.hebi.quickbuf.ProtoUtil;

public final class RogueBoothStatusOuterClass {
  /**
   * Protobuf enum {@code RogueBoothStatus}
   */
  public enum RogueBoothStatus implements ProtoEnum<RogueBoothStatus> {
    /**
     * <code>ROGUE_BOOTH_NONE = 0;</code>
     */
    ROGUE_BOOTH_NONE("ROGUE_BOOTH_NONE", 0),

    /**
     * <code>ROGUE_BOOTH_EMPTY = 1;</code>
     */
    ROGUE_BOOTH_EMPTY("ROGUE_BOOTH_EMPTY", 1),

    /**
     * <code>ROGUE_BOOTH_DISPLAY = 2;</code>
     */
    ROGUE_BOOTH_DISPLAY("ROGUE_BOOTH_DISPLAY", 2);

    /**
     * <code>ROGUE_BOOTH_NONE = 0;</code>
     */
    public static final int ROGUE_BOOTH_NONE_VALUE = 0;

    /**
     * <code>ROGUE_BOOTH_EMPTY = 1;</code>
     */
    public static final int ROGUE_BOOTH_EMPTY_VALUE = 1;

    /**
     * <code>ROGUE_BOOTH_DISPLAY = 2;</code>
     */
    public static final int ROGUE_BOOTH_DISPLAY_VALUE = 2;

    private final String name;

    private final int number;

    private RogueBoothStatus(String name, int number) {
      this.name = name;
      this.number = number;
    }

    /**
     * @return the string representation of enum entry
     */
    @Override
    public String getName() {
      return name;
    }

    /**
     * @return the numeric wire value of this enum entry
     */
    @Override
    public int getNumber() {
      return number;
    }

    /**
     * @return a converter that maps between this enum's numeric and text representations
     */
    public static ProtoEnum.EnumConverter<RogueBoothStatus> converter() {
      return RogueBoothStatusConverter.INSTANCE;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value, or null if unknown.
     */
    public static RogueBoothStatus forNumber(int value) {
      return RogueBoothStatusConverter.INSTANCE.forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @param other Fallback value in case the value is not known.
     * @return The enum associated with the given numeric wire value, or the fallback value if unknown.
     */
    public static RogueBoothStatus forNumberOr(int number, RogueBoothStatus other) {
      RogueBoothStatus value = forNumber(number);
      return value == null ? other : value;
    }

    enum RogueBoothStatusConverter implements ProtoEnum.EnumConverter<RogueBoothStatus> {
      INSTANCE;

      private static final RogueBoothStatus[] lookup = new RogueBoothStatus[3];

      static {
        lookup[0] = ROGUE_BOOTH_NONE;
        lookup[1] = ROGUE_BOOTH_EMPTY;
        lookup[2] = ROGUE_BOOTH_DISPLAY;
      }

      @Override
      public final RogueBoothStatus forNumber(final int value) {
        if (value >= 0 && value < lookup.length) {
          return lookup[value];
        }
        return null;
      }

      @Override
      public final RogueBoothStatus forName(final CharSequence value) {
        if (value.length() == 16) {
          if (ProtoUtil.isEqual("ROGUE_BOOTH_NONE", value)) {
            return ROGUE_BOOTH_NONE;
          }
        }
        if (value.length() == 17) {
          if (ProtoUtil.isEqual("ROGUE_BOOTH_EMPTY", value)) {
            return ROGUE_BOOTH_EMPTY;
          }
        }
        if (value.length() == 19) {
          if (ProtoUtil.isEqual("ROGUE_BOOTH_DISPLAY", value)) {
            return ROGUE_BOOTH_DISPLAY;
          }
        }
        return null;
      }
    }
  }
}
