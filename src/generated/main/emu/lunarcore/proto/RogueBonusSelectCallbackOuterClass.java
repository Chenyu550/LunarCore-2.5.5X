// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class RogueBonusSelectCallbackOuterClass {
  /**
   * Protobuf type {@code RogueBonusSelectCallback}
   */
  public static final class RogueBonusSelectCallback extends ProtoMessage<RogueBonusSelectCallback> implements Cloneable {
    private static final long serialVersionUID = 0L;

    private RogueBonusSelectCallback() {
    }

    /**
     * @return a new empty instance of {@code RogueBonusSelectCallback}
     */
    public static RogueBonusSelectCallback newInstance() {
      return new RogueBonusSelectCallback();
    }

    @Override
    public RogueBonusSelectCallback copyFrom(final RogueBonusSelectCallback other) {
      cachedSize = other.cachedSize;
      return this;
    }

    @Override
    public RogueBonusSelectCallback mergeFrom(final RogueBonusSelectCallback other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      return this;
    }

    @Override
    public RogueBonusSelectCallback clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      return this;
    }

    @Override
    public RogueBonusSelectCallback clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof RogueBonusSelectCallback)) {
        return false;
      }
      RogueBonusSelectCallback other = (RogueBonusSelectCallback) o;
      return true;
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public RogueBonusSelectCallback mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      output.endObject();
    }

    @Override
    public RogueBonusSelectCallback mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public RogueBonusSelectCallback clone() {
      return new RogueBonusSelectCallback().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static RogueBonusSelectCallback parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new RogueBonusSelectCallback(), data).checkInitialized();
    }

    public static RogueBonusSelectCallback parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new RogueBonusSelectCallback(), input).checkInitialized();
    }

    public static RogueBonusSelectCallback parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new RogueBonusSelectCallback(), input).checkInitialized();
    }

    /**
     * @return factory for creating RogueBonusSelectCallback messages
     */
    public static MessageFactory<RogueBonusSelectCallback> getFactory() {
      return RogueBonusSelectCallbackFactory.INSTANCE;
    }

    private enum RogueBonusSelectCallbackFactory implements MessageFactory<RogueBonusSelectCallback> {
      INSTANCE;

      @Override
      public RogueBonusSelectCallback create() {
        return RogueBonusSelectCallback.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
    }
  }
}
