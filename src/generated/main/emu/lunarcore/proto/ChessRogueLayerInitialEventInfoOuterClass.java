// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedMessage;

public final class ChessRogueLayerInitialEventInfoOuterClass {
  /**
   * Protobuf type {@code ChessRogueLayerInitialEventInfo}
   */
  public static final class ChessRogueLayerInitialEventInfo extends ProtoMessage<ChessRogueLayerInitialEventInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 GPGLFHPIJJB = 12;</code>
     */
    private int gPGLFHPIJJB;

    /**
     * <code>repeated .ChessRogueCell cell_list = 14;</code>
     */
    private final RepeatedMessage<ChessRogueCellOuterClass.ChessRogueCell> cellList = RepeatedMessage.newEmptyInstance(ChessRogueCellOuterClass.ChessRogueCell.getFactory());

    private ChessRogueLayerInitialEventInfo() {
    }

    /**
     * @return a new empty instance of {@code ChessRogueLayerInitialEventInfo}
     */
    public static ChessRogueLayerInitialEventInfo newInstance() {
      return new ChessRogueLayerInitialEventInfo();
    }

    /**
     * <code>optional uint32 GPGLFHPIJJB = 12;</code>
     * @return whether the gPGLFHPIJJB field is set
     */
    public boolean hasGPGLFHPIJJB() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 GPGLFHPIJJB = 12;</code>
     * @return this
     */
    public ChessRogueLayerInitialEventInfo clearGPGLFHPIJJB() {
      bitField0_ &= ~0x00000001;
      gPGLFHPIJJB = 0;
      return this;
    }

    /**
     * <code>optional uint32 GPGLFHPIJJB = 12;</code>
     * @return the gPGLFHPIJJB
     */
    public int getGPGLFHPIJJB() {
      return gPGLFHPIJJB;
    }

    /**
     * <code>optional uint32 GPGLFHPIJJB = 12;</code>
     * @param value the gPGLFHPIJJB to set
     * @return this
     */
    public ChessRogueLayerInitialEventInfo setGPGLFHPIJJB(final int value) {
      bitField0_ |= 0x00000001;
      gPGLFHPIJJB = value;
      return this;
    }

    /**
     * <code>repeated .ChessRogueCell cell_list = 14;</code>
     * @return whether the cellList field is set
     */
    public boolean hasCellList() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>repeated .ChessRogueCell cell_list = 14;</code>
     * @return this
     */
    public ChessRogueLayerInitialEventInfo clearCellList() {
      bitField0_ &= ~0x00000002;
      cellList.clear();
      return this;
    }

    /**
     * <code>repeated .ChessRogueCell cell_list = 14;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableCellList()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<ChessRogueCellOuterClass.ChessRogueCell> getCellList() {
      return cellList;
    }

    /**
     * <code>repeated .ChessRogueCell cell_list = 14;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<ChessRogueCellOuterClass.ChessRogueCell> getMutableCellList() {
      bitField0_ |= 0x00000002;
      return cellList;
    }

    /**
     * <code>repeated .ChessRogueCell cell_list = 14;</code>
     * @param value the cellList to add
     * @return this
     */
    public ChessRogueLayerInitialEventInfo addCellList(
        final ChessRogueCellOuterClass.ChessRogueCell value) {
      bitField0_ |= 0x00000002;
      cellList.add(value);
      return this;
    }

    /**
     * <code>repeated .ChessRogueCell cell_list = 14;</code>
     * @param values the cellList to add
     * @return this
     */
    public ChessRogueLayerInitialEventInfo addAllCellList(
        final ChessRogueCellOuterClass.ChessRogueCell... values) {
      bitField0_ |= 0x00000002;
      cellList.addAll(values);
      return this;
    }

    @Override
    public ChessRogueLayerInitialEventInfo copyFrom(final ChessRogueLayerInitialEventInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        gPGLFHPIJJB = other.gPGLFHPIJJB;
        cellList.copyFrom(other.cellList);
      }
      return this;
    }

    @Override
    public ChessRogueLayerInitialEventInfo mergeFrom(final ChessRogueLayerInitialEventInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasGPGLFHPIJJB()) {
        setGPGLFHPIJJB(other.gPGLFHPIJJB);
      }
      if (other.hasCellList()) {
        getMutableCellList().addAll(other.cellList);
      }
      return this;
    }

    @Override
    public ChessRogueLayerInitialEventInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      gPGLFHPIJJB = 0;
      cellList.clear();
      return this;
    }

    @Override
    public ChessRogueLayerInitialEventInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      cellList.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof ChessRogueLayerInitialEventInfo)) {
        return false;
      }
      ChessRogueLayerInitialEventInfo other = (ChessRogueLayerInitialEventInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasGPGLFHPIJJB() || gPGLFHPIJJB == other.gPGLFHPIJJB)
        && (!hasCellList() || cellList.equals(other.cellList));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 96);
        output.writeUInt32NoTag(gPGLFHPIJJB);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        for (int i = 0; i < cellList.length(); i++) {
          output.writeRawByte((byte) 114);
          output.writeMessageNoTag(cellList.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(gPGLFHPIJJB);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += (1 * cellList.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(cellList);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public ChessRogueLayerInitialEventInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 96: {
            // gPGLFHPIJJB
            gPGLFHPIJJB = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 114) {
              break;
            }
          }
          case 114: {
            // cellList
            tag = input.readRepeatedMessage(cellList, tag);
            bitField0_ |= 0x00000002;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.gPGLFHPIJJB, gPGLFHPIJJB);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRepeatedMessage(FieldNames.cellList, cellList);
      }
      output.endObject();
    }

    @Override
    public ChessRogueLayerInitialEventInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -1903177831: {
            if (input.isAtField(FieldNames.gPGLFHPIJJB)) {
              if (!input.trySkipNullValue()) {
                gPGLFHPIJJB = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -917820128:
          case 1629973851: {
            if (input.isAtField(FieldNames.cellList)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(cellList);
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public ChessRogueLayerInitialEventInfo clone() {
      return new ChessRogueLayerInitialEventInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static ChessRogueLayerInitialEventInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new ChessRogueLayerInitialEventInfo(), data).checkInitialized();
    }

    public static ChessRogueLayerInitialEventInfo parseFrom(final ProtoSource input) throws
        IOException {
      return ProtoMessage.mergeFrom(new ChessRogueLayerInitialEventInfo(), input).checkInitialized();
    }

    public static ChessRogueLayerInitialEventInfo parseFrom(final JsonSource input) throws
        IOException {
      return ProtoMessage.mergeFrom(new ChessRogueLayerInitialEventInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating ChessRogueLayerInitialEventInfo messages
     */
    public static MessageFactory<ChessRogueLayerInitialEventInfo> getFactory() {
      return ChessRogueLayerInitialEventInfoFactory.INSTANCE;
    }

    private enum ChessRogueLayerInitialEventInfoFactory implements MessageFactory<ChessRogueLayerInitialEventInfo> {
      INSTANCE;

      @Override
      public ChessRogueLayerInitialEventInfo create() {
        return ChessRogueLayerInitialEventInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName gPGLFHPIJJB = FieldName.forField("GPGLFHPIJJB");

      static final FieldName cellList = FieldName.forField("cellList", "cell_list");
    }
  }
}
