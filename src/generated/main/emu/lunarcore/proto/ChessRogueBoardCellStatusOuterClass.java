// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import us.hebi.quickbuf.ProtoEnum;
import us.hebi.quickbuf.ProtoUtil;

public final class ChessRogueBoardCellStatusOuterClass {
  /**
   * Protobuf enum {@code ChessRogueBoardCellStatus}
   */
  public enum ChessRogueBoardCellStatus implements ProtoEnum<ChessRogueBoardCellStatus> {
    /**
     * <code>IDLE = 0;</code>
     */
    IDLE("IDLE", 0),

    /**
     * <code>SELECTED = 1;</code>
     */
    SELECTED("SELECTED", 1),

    /**
     * <code>PROCESSING = 2;</code>
     */
    PROCESSING("PROCESSING", 2),

    /**
     * <code>FINISH = 3;</code>
     */
    FINISH("FINISH", 3);

    /**
     * <code>IDLE = 0;</code>
     */
    public static final int IDLE_VALUE = 0;

    /**
     * <code>SELECTED = 1;</code>
     */
    public static final int SELECTED_VALUE = 1;

    /**
     * <code>PROCESSING = 2;</code>
     */
    public static final int PROCESSING_VALUE = 2;

    /**
     * <code>FINISH = 3;</code>
     */
    public static final int FINISH_VALUE = 3;

    private final String name;

    private final int number;

    private ChessRogueBoardCellStatus(String name, int number) {
      this.name = name;
      this.number = number;
    }

    /**
     * @return the string representation of enum entry
     */
    @Override
    public String getName() {
      return name;
    }

    /**
     * @return the numeric wire value of this enum entry
     */
    @Override
    public int getNumber() {
      return number;
    }

    /**
     * @return a converter that maps between this enum's numeric and text representations
     */
    public static ProtoEnum.EnumConverter<ChessRogueBoardCellStatus> converter() {
      return ChessRogueBoardCellStatusConverter.INSTANCE;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value, or null if unknown.
     */
    public static ChessRogueBoardCellStatus forNumber(int value) {
      return ChessRogueBoardCellStatusConverter.INSTANCE.forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @param other Fallback value in case the value is not known.
     * @return The enum associated with the given numeric wire value, or the fallback value if unknown.
     */
    public static ChessRogueBoardCellStatus forNumberOr(int number,
        ChessRogueBoardCellStatus other) {
      ChessRogueBoardCellStatus value = forNumber(number);
      return value == null ? other : value;
    }

    enum ChessRogueBoardCellStatusConverter implements ProtoEnum.EnumConverter<ChessRogueBoardCellStatus> {
      INSTANCE;

      private static final ChessRogueBoardCellStatus[] lookup = new ChessRogueBoardCellStatus[4];

      static {
        lookup[0] = IDLE;
        lookup[1] = SELECTED;
        lookup[2] = PROCESSING;
        lookup[3] = FINISH;
      }

      @Override
      public final ChessRogueBoardCellStatus forNumber(final int value) {
        if (value >= 0 && value < lookup.length) {
          return lookup[value];
        }
        return null;
      }

      @Override
      public final ChessRogueBoardCellStatus forName(final CharSequence value) {
        switch (value.length()) {
          case 4: {
            if (ProtoUtil.isEqual("IDLE", value)) {
              return IDLE;
            }
            break;
          }
          case 6: {
            if (ProtoUtil.isEqual("FINISH", value)) {
              return FINISH;
            }
            break;
          }
          case 8: {
            if (ProtoUtil.isEqual("SELECTED", value)) {
              return SELECTED;
            }
            break;
          }
          case 10: {
            if (ProtoUtil.isEqual("PROCESSING", value)) {
              return PROCESSING;
            }
            break;
          }
        }
        return null;
      }
    }
  }
}
