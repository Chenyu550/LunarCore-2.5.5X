// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedInt;

public final class MOICCEIFBBAOuterClass {
  /**
   * Protobuf type {@code MOICCEIFBBA}
   */
  public static final class MOICCEIFBBA extends ProtoMessage<MOICCEIFBBA> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 KJALGDHJNLN = 1;</code>
     */
    private int kJALGDHJNLN;

    /**
     * <code>optional uint32 INHOFMDEECK = 4;</code>
     */
    private int iNHOFMDEECK;

    /**
     * <code>optional bool ALNMBFMEIAC = 14;</code>
     */
    private boolean aLNMBFMEIAC;

    /**
     * <code>repeated uint32 GJHNPLHBGAE = 6;</code>
     */
    private final RepeatedInt gJHNPLHBGAE = RepeatedInt.newEmptyInstance();

    private MOICCEIFBBA() {
    }

    /**
     * @return a new empty instance of {@code MOICCEIFBBA}
     */
    public static MOICCEIFBBA newInstance() {
      return new MOICCEIFBBA();
    }

    /**
     * <code>optional uint32 KJALGDHJNLN = 1;</code>
     * @return whether the kJALGDHJNLN field is set
     */
    public boolean hasKJALGDHJNLN() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 KJALGDHJNLN = 1;</code>
     * @return this
     */
    public MOICCEIFBBA clearKJALGDHJNLN() {
      bitField0_ &= ~0x00000001;
      kJALGDHJNLN = 0;
      return this;
    }

    /**
     * <code>optional uint32 KJALGDHJNLN = 1;</code>
     * @return the kJALGDHJNLN
     */
    public int getKJALGDHJNLN() {
      return kJALGDHJNLN;
    }

    /**
     * <code>optional uint32 KJALGDHJNLN = 1;</code>
     * @param value the kJALGDHJNLN to set
     * @return this
     */
    public MOICCEIFBBA setKJALGDHJNLN(final int value) {
      bitField0_ |= 0x00000001;
      kJALGDHJNLN = value;
      return this;
    }

    /**
     * <code>optional uint32 INHOFMDEECK = 4;</code>
     * @return whether the iNHOFMDEECK field is set
     */
    public boolean hasINHOFMDEECK() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 INHOFMDEECK = 4;</code>
     * @return this
     */
    public MOICCEIFBBA clearINHOFMDEECK() {
      bitField0_ &= ~0x00000002;
      iNHOFMDEECK = 0;
      return this;
    }

    /**
     * <code>optional uint32 INHOFMDEECK = 4;</code>
     * @return the iNHOFMDEECK
     */
    public int getINHOFMDEECK() {
      return iNHOFMDEECK;
    }

    /**
     * <code>optional uint32 INHOFMDEECK = 4;</code>
     * @param value the iNHOFMDEECK to set
     * @return this
     */
    public MOICCEIFBBA setINHOFMDEECK(final int value) {
      bitField0_ |= 0x00000002;
      iNHOFMDEECK = value;
      return this;
    }

    /**
     * <code>optional bool ALNMBFMEIAC = 14;</code>
     * @return whether the aLNMBFMEIAC field is set
     */
    public boolean hasALNMBFMEIAC() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional bool ALNMBFMEIAC = 14;</code>
     * @return this
     */
    public MOICCEIFBBA clearALNMBFMEIAC() {
      bitField0_ &= ~0x00000004;
      aLNMBFMEIAC = false;
      return this;
    }

    /**
     * <code>optional bool ALNMBFMEIAC = 14;</code>
     * @return the aLNMBFMEIAC
     */
    public boolean getALNMBFMEIAC() {
      return aLNMBFMEIAC;
    }

    /**
     * <code>optional bool ALNMBFMEIAC = 14;</code>
     * @param value the aLNMBFMEIAC to set
     * @return this
     */
    public MOICCEIFBBA setALNMBFMEIAC(final boolean value) {
      bitField0_ |= 0x00000004;
      aLNMBFMEIAC = value;
      return this;
    }

    /**
     * <code>repeated uint32 GJHNPLHBGAE = 6;</code>
     * @return whether the gJHNPLHBGAE field is set
     */
    public boolean hasGJHNPLHBGAE() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>repeated uint32 GJHNPLHBGAE = 6;</code>
     * @return this
     */
    public MOICCEIFBBA clearGJHNPLHBGAE() {
      bitField0_ &= ~0x00000008;
      gJHNPLHBGAE.clear();
      return this;
    }

    /**
     * <code>repeated uint32 GJHNPLHBGAE = 6;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableGJHNPLHBGAE()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedInt getGJHNPLHBGAE() {
      return gJHNPLHBGAE;
    }

    /**
     * <code>repeated uint32 GJHNPLHBGAE = 6;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedInt getMutableGJHNPLHBGAE() {
      bitField0_ |= 0x00000008;
      return gJHNPLHBGAE;
    }

    /**
     * <code>repeated uint32 GJHNPLHBGAE = 6;</code>
     * @param value the gJHNPLHBGAE to add
     * @return this
     */
    public MOICCEIFBBA addGJHNPLHBGAE(final int value) {
      bitField0_ |= 0x00000008;
      gJHNPLHBGAE.add(value);
      return this;
    }

    /**
     * <code>repeated uint32 GJHNPLHBGAE = 6;</code>
     * @param values the gJHNPLHBGAE to add
     * @return this
     */
    public MOICCEIFBBA addAllGJHNPLHBGAE(final int... values) {
      bitField0_ |= 0x00000008;
      gJHNPLHBGAE.addAll(values);
      return this;
    }

    @Override
    public MOICCEIFBBA copyFrom(final MOICCEIFBBA other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        kJALGDHJNLN = other.kJALGDHJNLN;
        iNHOFMDEECK = other.iNHOFMDEECK;
        aLNMBFMEIAC = other.aLNMBFMEIAC;
        gJHNPLHBGAE.copyFrom(other.gJHNPLHBGAE);
      }
      return this;
    }

    @Override
    public MOICCEIFBBA mergeFrom(final MOICCEIFBBA other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasKJALGDHJNLN()) {
        setKJALGDHJNLN(other.kJALGDHJNLN);
      }
      if (other.hasINHOFMDEECK()) {
        setINHOFMDEECK(other.iNHOFMDEECK);
      }
      if (other.hasALNMBFMEIAC()) {
        setALNMBFMEIAC(other.aLNMBFMEIAC);
      }
      if (other.hasGJHNPLHBGAE()) {
        getMutableGJHNPLHBGAE().addAll(other.gJHNPLHBGAE);
      }
      return this;
    }

    @Override
    public MOICCEIFBBA clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      kJALGDHJNLN = 0;
      iNHOFMDEECK = 0;
      aLNMBFMEIAC = false;
      gJHNPLHBGAE.clear();
      return this;
    }

    @Override
    public MOICCEIFBBA clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      gJHNPLHBGAE.clear();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof MOICCEIFBBA)) {
        return false;
      }
      MOICCEIFBBA other = (MOICCEIFBBA) o;
      return bitField0_ == other.bitField0_
        && (!hasKJALGDHJNLN() || kJALGDHJNLN == other.kJALGDHJNLN)
        && (!hasINHOFMDEECK() || iNHOFMDEECK == other.iNHOFMDEECK)
        && (!hasALNMBFMEIAC() || aLNMBFMEIAC == other.aLNMBFMEIAC)
        && (!hasGJHNPLHBGAE() || gJHNPLHBGAE.equals(other.gJHNPLHBGAE));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 8);
        output.writeUInt32NoTag(kJALGDHJNLN);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(iNHOFMDEECK);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 112);
        output.writeBoolNoTag(aLNMBFMEIAC);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        for (int i = 0; i < gJHNPLHBGAE.length(); i++) {
          output.writeRawByte((byte) 48);
          output.writeUInt32NoTag(gJHNPLHBGAE.array()[i]);
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(kJALGDHJNLN);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(iNHOFMDEECK);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += (1 * gJHNPLHBGAE.length()) + ProtoSink.computeRepeatedUInt32SizeNoTag(gJHNPLHBGAE);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public MOICCEIFBBA mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 8: {
            // kJALGDHJNLN
            kJALGDHJNLN = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 32) {
              break;
            }
          }
          case 32: {
            // iNHOFMDEECK
            iNHOFMDEECK = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // aLNMBFMEIAC
            aLNMBFMEIAC = input.readBool();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 50) {
              break;
            }
          }
          case 50: {
            // gJHNPLHBGAE [packed=true]
            input.readPackedUInt32(gJHNPLHBGAE, tag);
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
          case 48: {
            // gJHNPLHBGAE [packed=false]
            tag = input.readRepeatedUInt32(gJHNPLHBGAE, tag);
            bitField0_ |= 0x00000008;
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.kJALGDHJNLN, kJALGDHJNLN);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.iNHOFMDEECK, iNHOFMDEECK);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeBool(FieldNames.aLNMBFMEIAC, aLNMBFMEIAC);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRepeatedUInt32(FieldNames.gJHNPLHBGAE, gJHNPLHBGAE);
      }
      output.endObject();
    }

    @Override
    public MOICCEIFBBA mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -596510137: {
            if (input.isAtField(FieldNames.kJALGDHJNLN)) {
              if (!input.trySkipNullValue()) {
                kJALGDHJNLN = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1551137671: {
            if (input.isAtField(FieldNames.iNHOFMDEECK)) {
              if (!input.trySkipNullValue()) {
                iNHOFMDEECK = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -559983259: {
            if (input.isAtField(FieldNames.aLNMBFMEIAC)) {
              if (!input.trySkipNullValue()) {
                aLNMBFMEIAC = input.readBool();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1346088364: {
            if (input.isAtField(FieldNames.gJHNPLHBGAE)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedUInt32(gJHNPLHBGAE);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public MOICCEIFBBA clone() {
      return new MOICCEIFBBA().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static MOICCEIFBBA parseFrom(final byte[] data) throws InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new MOICCEIFBBA(), data).checkInitialized();
    }

    public static MOICCEIFBBA parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new MOICCEIFBBA(), input).checkInitialized();
    }

    public static MOICCEIFBBA parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new MOICCEIFBBA(), input).checkInitialized();
    }

    /**
     * @return factory for creating MOICCEIFBBA messages
     */
    public static MessageFactory<MOICCEIFBBA> getFactory() {
      return MOICCEIFBBAFactory.INSTANCE;
    }

    private enum MOICCEIFBBAFactory implements MessageFactory<MOICCEIFBBA> {
      INSTANCE;

      @Override
      public MOICCEIFBBA create() {
        return MOICCEIFBBA.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName kJALGDHJNLN = FieldName.forField("KJALGDHJNLN");

      static final FieldName iNHOFMDEECK = FieldName.forField("INHOFMDEECK");

      static final FieldName aLNMBFMEIAC = FieldName.forField("ALNMBFMEIAC");

      static final FieldName gJHNPLHBGAE = FieldName.forField("GJHNPLHBGAE");
    }
  }
}
