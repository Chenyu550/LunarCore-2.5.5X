// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class ChessRogueUpdateLevelBaseInfoScNotifyOuterClass {
  /**
   * Protobuf type {@code ChessRogueUpdateLevelBaseInfoScNotify}
   */
  public static final class ChessRogueUpdateLevelBaseInfoScNotify extends ProtoMessage<ChessRogueUpdateLevelBaseInfoScNotify> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional .ChessRogueUpdateLevelStatusReason reason = 7;</code>
     */
    private int reason;

    /**
     * <code>optional .ChessRogueLevelStatus level_status = 12;</code>
     */
    private int levelStatus;

    private ChessRogueUpdateLevelBaseInfoScNotify() {
    }

    /**
     * @return a new empty instance of {@code ChessRogueUpdateLevelBaseInfoScNotify}
     */
    public static ChessRogueUpdateLevelBaseInfoScNotify newInstance() {
      return new ChessRogueUpdateLevelBaseInfoScNotify();
    }

    /**
     * <code>optional .ChessRogueUpdateLevelStatusReason reason = 7;</code>
     * @return whether the reason field is set
     */
    public boolean hasReason() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional .ChessRogueUpdateLevelStatusReason reason = 7;</code>
     * @return this
     */
    public ChessRogueUpdateLevelBaseInfoScNotify clearReason() {
      bitField0_ &= ~0x00000001;
      reason = 0;
      return this;
    }

    /**
     * <code>optional .ChessRogueUpdateLevelStatusReason reason = 7;</code>
     * @return the reason
     */
    public ChessRogueUpdateLevelStatusReasonOuterClass.ChessRogueUpdateLevelStatusReason getReason(
        ) {
      return ChessRogueUpdateLevelStatusReasonOuterClass.ChessRogueUpdateLevelStatusReason.forNumber(reason);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link ChessRogueUpdateLevelBaseInfoScNotify#getReason()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getReasonValue() {
      return reason;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link ChessRogueUpdateLevelStatusReasonOuterClass.ChessRogueUpdateLevelStatusReason}. Setting an invalid value
     * can cause {@link ChessRogueUpdateLevelBaseInfoScNotify#getReason()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public ChessRogueUpdateLevelBaseInfoScNotify setReasonValue(final int value) {
      bitField0_ |= 0x00000001;
      reason = value;
      return this;
    }

    /**
     * <code>optional .ChessRogueUpdateLevelStatusReason reason = 7;</code>
     * @param value the reason to set
     * @return this
     */
    public ChessRogueUpdateLevelBaseInfoScNotify setReason(
        final ChessRogueUpdateLevelStatusReasonOuterClass.ChessRogueUpdateLevelStatusReason value) {
      bitField0_ |= 0x00000001;
      reason = value.getNumber();
      return this;
    }

    /**
     * <code>optional .ChessRogueLevelStatus level_status = 12;</code>
     * @return whether the levelStatus field is set
     */
    public boolean hasLevelStatus() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional .ChessRogueLevelStatus level_status = 12;</code>
     * @return this
     */
    public ChessRogueUpdateLevelBaseInfoScNotify clearLevelStatus() {
      bitField0_ &= ~0x00000002;
      levelStatus = 0;
      return this;
    }

    /**
     * <code>optional .ChessRogueLevelStatus level_status = 12;</code>
     * @return the levelStatus
     */
    public ChessRogueLevelStatusOuterClass.ChessRogueLevelStatus getLevelStatus() {
      return ChessRogueLevelStatusOuterClass.ChessRogueLevelStatus.forNumber(levelStatus);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link ChessRogueUpdateLevelBaseInfoScNotify#getLevelStatus()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getLevelStatusValue() {
      return levelStatus;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link ChessRogueLevelStatusOuterClass.ChessRogueLevelStatus}. Setting an invalid value
     * can cause {@link ChessRogueUpdateLevelBaseInfoScNotify#getLevelStatus()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public ChessRogueUpdateLevelBaseInfoScNotify setLevelStatusValue(final int value) {
      bitField0_ |= 0x00000002;
      levelStatus = value;
      return this;
    }

    /**
     * <code>optional .ChessRogueLevelStatus level_status = 12;</code>
     * @param value the levelStatus to set
     * @return this
     */
    public ChessRogueUpdateLevelBaseInfoScNotify setLevelStatus(
        final ChessRogueLevelStatusOuterClass.ChessRogueLevelStatus value) {
      bitField0_ |= 0x00000002;
      levelStatus = value.getNumber();
      return this;
    }

    @Override
    public ChessRogueUpdateLevelBaseInfoScNotify copyFrom(
        final ChessRogueUpdateLevelBaseInfoScNotify other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        reason = other.reason;
        levelStatus = other.levelStatus;
      }
      return this;
    }

    @Override
    public ChessRogueUpdateLevelBaseInfoScNotify mergeFrom(
        final ChessRogueUpdateLevelBaseInfoScNotify other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasReason()) {
        setReasonValue(other.reason);
      }
      if (other.hasLevelStatus()) {
        setLevelStatusValue(other.levelStatus);
      }
      return this;
    }

    @Override
    public ChessRogueUpdateLevelBaseInfoScNotify clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      reason = 0;
      levelStatus = 0;
      return this;
    }

    @Override
    public ChessRogueUpdateLevelBaseInfoScNotify clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof ChessRogueUpdateLevelBaseInfoScNotify)) {
        return false;
      }
      ChessRogueUpdateLevelBaseInfoScNotify other = (ChessRogueUpdateLevelBaseInfoScNotify) o;
      return bitField0_ == other.bitField0_
        && (!hasReason() || reason == other.reason)
        && (!hasLevelStatus() || levelStatus == other.levelStatus);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 56);
        output.writeEnumNoTag(reason);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 96);
        output.writeEnumNoTag(levelStatus);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(reason);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(levelStatus);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public ChessRogueUpdateLevelBaseInfoScNotify mergeFrom(final ProtoSource input) throws
        IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 56: {
            // reason
            final int value = input.readInt32();
            if (ChessRogueUpdateLevelStatusReasonOuterClass.ChessRogueUpdateLevelStatusReason.forNumber(value) != null) {
              reason = value;
              bitField0_ |= 0x00000001;
            }
            tag = input.readTag();
            if (tag != 96) {
              break;
            }
          }
          case 96: {
            // levelStatus
            final int value = input.readInt32();
            if (ChessRogueLevelStatusOuterClass.ChessRogueLevelStatus.forNumber(value) != null) {
              levelStatus = value;
              bitField0_ |= 0x00000002;
            }
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeEnum(FieldNames.reason, reason, ChessRogueUpdateLevelStatusReasonOuterClass.ChessRogueUpdateLevelStatusReason.converter());
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeEnum(FieldNames.levelStatus, levelStatus, ChessRogueLevelStatusOuterClass.ChessRogueLevelStatus.converter());
      }
      output.endObject();
    }

    @Override
    public ChessRogueUpdateLevelBaseInfoScNotify mergeFrom(final JsonSource input) throws
        IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -934964668: {
            if (input.isAtField(FieldNames.reason)) {
              if (!input.trySkipNullValue()) {
                final ChessRogueUpdateLevelStatusReasonOuterClass.ChessRogueUpdateLevelStatusReason value = input.readEnum(ChessRogueUpdateLevelStatusReasonOuterClass.ChessRogueUpdateLevelStatusReason.converter());
                if (value != null) {
                  reason = value.getNumber();
                  bitField0_ |= 0x00000001;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1781179542:
          case 1430451469: {
            if (input.isAtField(FieldNames.levelStatus)) {
              if (!input.trySkipNullValue()) {
                final ChessRogueLevelStatusOuterClass.ChessRogueLevelStatus value = input.readEnum(ChessRogueLevelStatusOuterClass.ChessRogueLevelStatus.converter());
                if (value != null) {
                  levelStatus = value.getNumber();
                  bitField0_ |= 0x00000002;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public ChessRogueUpdateLevelBaseInfoScNotify clone() {
      return new ChessRogueUpdateLevelBaseInfoScNotify().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static ChessRogueUpdateLevelBaseInfoScNotify parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new ChessRogueUpdateLevelBaseInfoScNotify(), data).checkInitialized();
    }

    public static ChessRogueUpdateLevelBaseInfoScNotify parseFrom(final ProtoSource input) throws
        IOException {
      return ProtoMessage.mergeFrom(new ChessRogueUpdateLevelBaseInfoScNotify(), input).checkInitialized();
    }

    public static ChessRogueUpdateLevelBaseInfoScNotify parseFrom(final JsonSource input) throws
        IOException {
      return ProtoMessage.mergeFrom(new ChessRogueUpdateLevelBaseInfoScNotify(), input).checkInitialized();
    }

    /**
     * @return factory for creating ChessRogueUpdateLevelBaseInfoScNotify messages
     */
    public static MessageFactory<ChessRogueUpdateLevelBaseInfoScNotify> getFactory() {
      return ChessRogueUpdateLevelBaseInfoScNotifyFactory.INSTANCE;
    }

    private enum ChessRogueUpdateLevelBaseInfoScNotifyFactory implements MessageFactory<ChessRogueUpdateLevelBaseInfoScNotify> {
      INSTANCE;

      @Override
      public ChessRogueUpdateLevelBaseInfoScNotify create() {
        return ChessRogueUpdateLevelBaseInfoScNotify.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName reason = FieldName.forField("reason");

      static final FieldName levelStatus = FieldName.forField("levelStatus", "level_status");
    }
  }
}
